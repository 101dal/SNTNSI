import{_ as i,r,o as l,c as u,b as n,d as a,w as o,a as t,e}from"./app.ee4e0c75.js";const p={},c=t('<h1 id="python-les-bases" tabindex="-1"><a class="header-anchor" href="#python-les-bases" aria-hidden="true">#</a> Python : les bases</h1><p>Un ordinateur, sans programme, ne sait rien faire. Alors, programmer, qu&#39;est-ce que c&#39;est ? C&#39;est cr\xE9er des <strong>programmes</strong> (suite d&#39;instructions ex\xE9cut\xE9es par l&#39;ordinateur).</p><p>Il existe beaucoup de <strong>langages de programmation</strong> diff\xE9rents, et nous aurons l&#39;occasion de parler de ce qui les distingue les uns des autres, mais tous ont le m\xEAme objectif : fournir des suites d&#39;instructions \xE0 un ordinateur pour qu&#39;il les ex\xE9cute. Les instructions que vous allez \xE9crire seront ensuite traduites en <strong>langage machine</strong>, qui est le seul \xE0 \xEAtre directement utilisable par le processeur.</p><p>En NSI, nous allons utiliser principalement le langage <strong>Python</strong>. Python est un langage &quot;interpr\xE9t\xE9&quot;, ce qui signifie qu&#39;il faut utiliser un programme qui va lire nos instructions puis les ex\xE9cuter pour nous. Nous allons donc avoir besoin d&#39;un interpr\xE9teur.</p>',4),d=e("Voir activit\xE9 1 : Utilisation de Thonny"),v=t(`<h2 id="variables-et-types" tabindex="-1"><a class="header-anchor" href="#variables-et-types" aria-hidden="true">#</a> Variables et types</h2><p>Une variable, en programmation, est comparable \xE0 une bo\xEEte dans laquelle on peut ranger une valeur. On peut alors regarder la valeur \xE0 l&#39;int\xE9rieur (fonction <code>print</code>), modifier la valeur ou effectuer un test dessus.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>variable1 <span class="token operator">=</span> <span class="token number">42</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>variable1<span class="token punctuation">)</span>
<span class="token comment"># affiche : 42</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>variable1 <span class="token operator">=</span> <span class="token number">42</span>
variable1 <span class="token operator">=</span> <span class="token string">&quot;chat&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>variable1<span class="token punctuation">)</span>
<span class="token comment"># affiche : chat</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>variable1 <span class="token operator">=</span> <span class="token string">&quot;chat&quot;</span>
variable2 <span class="token operator">=</span> variable1
<span class="token keyword">print</span><span class="token punctuation">(</span>variable2<span class="token punctuation">)</span>
<span class="token comment"># affiche : chat</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="types-de-variables" tabindex="-1"><a class="header-anchor" href="#types-de-variables" aria-hidden="true">#</a> Types de variables</h3><p>Il existe quatre types de variables dits &quot;primitifs&quot;, ce sont les types de base :</p><table><thead><tr><th>type</th><th>signification</th><th>exemples</th></tr></thead><tbody><tr><td><strong>int</strong></td><td>entier num\xE9rique</td><td>-1, 2, 10, 20...</td></tr><tr><td><strong>str</strong></td><td>string, une cha\xEEne de caract\xE8res</td><td>&quot;le chat&quot;, &quot;Mathilde&quot;</td></tr><tr><td><strong>float</strong></td><td>valeur num\xE9rique \xE0 virgule flottante</td><td>10.2 ; 0.3 ; -0.7</td></tr><tr><td><strong>bool</strong></td><td>un bool\xE9en</td><td>True ou False</td></tr></tbody></table><p>On peut acc\xE9der au type d&#39;une variable avec l&#39;instruction <code>type(variable)</code></p><h3 id="effectuer-un-test" tabindex="-1"><a class="header-anchor" href="#effectuer-un-test" aria-hidden="true">#</a> Effectuer un test</h3><p>Pour effectuer un test, ou cr\xE9er une condition, on utilise le mot-cl\xE9 <code>if</code> qui signifie &quot;si&quot; en anglais.</p><p>Le mot-cl\xE9 <code>elif</code>, contraction de <strong>else if</strong>, qui signifie &quot;sinon, si&quot; en anglais, permet d&#39;ajouter une ou plusieurs conditions suppl\xE9mentaires.</p><table><thead><tr><th style="text-align:center;">Symbole</th><th>Signification</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td>\xE9galit\xE9 (pour des nombres ou des cha\xEEnes)</td></tr><tr><td style="text-align:center;">!=</td><td>in\xE9galit\xE9 (pour des nombres ou des cha\xEEnes</td></tr><tr><td style="text-align:center;">&lt;</td><td>est inf\xE9rieur \xE0</td></tr><tr><td style="text-align:center;">&gt;</td><td>est sup\xE9rieur \xE0</td></tr><tr><td style="text-align:center;">&lt;=</td><td>est inf\xE9rieur ou \xE9gal \xE0</td></tr><tr><td style="text-align:center;">&gt;=</td><td>est sup\xE9rieur ou \xE9gal \xE0</td></tr></tbody></table><p><strong>Exemple: mettre en place un choix d&#39;options</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>choix <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Voulez-vous convertir en degr\xE9s Celsius (1) ou en Kelvin (2) ? \\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> choix <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Vous avez choisi l&#39;option 1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> choix <span class="token operator">==</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Vous avez choisi l&#39;option 2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Vous avez indiqu\xE9 un choix non valable.&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Si l&#39;utilisateur indique &quot;1&quot; ou &quot;2&quot;, alors la r\xE9ponse correspondante sera affich\xE9e. Pour toute autre valeur tap\xE9e par l&#39;utilisateur, le programme indiquera que le choix n&#39;est pas valable.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u26A0\uFE0F Attention, lorsque l&#39;utilisateur donne une r\xE9ponse via la commande <strong>input</strong>, c&#39;est un type <strong>str</strong> (cha\xEEne de caract\xE8re) qui est cr\xE9\xE9, il faut donc comparer la r\xE9ponse \xE0 <strong>&quot;1&quot;</strong> et non \xE0 <strong>1</strong>.</p></div><h2 id="fonctions-print-et-input" tabindex="-1"><a class="header-anchor" href="#fonctions-print-et-input" aria-hidden="true">#</a> Fonctions : print et input</h2>`,18),m=e("Une fonction est une sorte d'outil qui permet de r\xE9aliser une action pr\xE9cise. Il existe de nombreuses fonctions pr\xE9d\xE9finies dans Python, et nous en avons d\xE9j\xE0 rencontr\xE9 deux dans l'"),g=e("activit\xE9 1"),h=e(" : "),b=n("code",null,"print",-1),q=e(" et "),k=n("code",null,"input",-1),f=e("."),y=t(`<p>Voici comment nous les avons utilis\xE9es :</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Bonjour&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;La temp\xE9rature est de&quot;</span><span class="token punctuation">,</span> temperature<span class="token punctuation">,</span> <span class="token string">&quot;degr\xE9s&quot;</span><span class="token punctuation">)</span>
<span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Quel est ton pr\xE9nom ? \\n&quot;</span><span class="token punctuation">)</span>
<span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>On peut remarquer qu&#39;elles n&#39;ont pas toutes \xE9t\xE9 appel\xE9es de la m\xEAme fa\xE7on.</p><ul><li>\xE0 la ligne 1, nous avons appel\xE9 <code>print</code> en passant l&#39;argument <code>&quot;Bonjour&quot;</code></li><li>\xE0 la ligne 2, nous avons appel\xE9 <code>print</code> en passant les arguments successifs : <ul><li><code>&quot;La temp\xE9rature est de&quot;</code></li><li><code>temperature</code></li><li><code>&quot;degr\xE9s&quot;</code></li></ul></li><li>\xE0 la ligne 3, nous avons appel\xE9 <code>input</code> en passant l&#39;argument <code>&quot;Quel est ton pr\xE9nom ? \\n&quot;)</code></li><li>\xE0 la ligne 4, nous n&#39;avons pass\xE9 aucun argument \xE0 la fonction <code>input</code></li></ul><p>Ces quatre cas de figure fonctionnent, et pourtant ils ne sont pas tous identiques.</p><div class="custom-container tip"><p class="custom-container-title">\xE0 savoir</p><p>Lorsque l&#39;on appelle une fonction, on peut avoir besoin d&#39;indiquer des arguments.</p><p>Chaque fonction est diff\xE9rente, et il convient de v\xE9rifier son fonctionnement (quels sont les arguments n\xE9cessaires ? que fait-elle ? est-ce qu&#39;elle renvoie une valeur ?) \xE0 l&#39;aide de la documentation avant de l&#39;utiliser.</p></div>`,6);function _(x,w){const s=r("RouterLink");return l(),u("div",null,[c,n("p",null,[a(s,{to:"/nsi-1ere/python-acti1.html"},{default:o(()=>[d]),_:1})]),v,n("p",null,[m,a(s,{to:"/nsi-1%C3%A8re/python-acti1.html"},{default:o(()=>[g]),_:1}),h,b,q,k,f]),y])}const C=i(p,[["render",_],["__file","python1.html.vue"]]);export{C as default};
