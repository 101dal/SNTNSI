import{_ as a,r as t,o as i,c as o,b as e,d as r,w as u,a as l,e as s}from"./app.ee4e0c75.js";const p={},c=l(`<h1 id="les-conditions-realisation-d-un-mini-quizz" tabindex="-1"><a class="header-anchor" href="#les-conditions-realisation-d-un-mini-quizz" aria-hidden="true">#</a> Les conditions : r\xE9alisation d&#39;un mini quizz</h1><p>Vous en savez d\xE9sormais suffisamment pour utiliser Thonny, ce qui vous permet de produire et interpr\xE9ter un programme simple en Python. Mais pour l&#39;instant, nous disposons d&#39;outils rudimentaires.</p><p><em>Ajoutons un peu de conditions...</em></p><h2 id="if-else-introduire-des-conditions" tabindex="-1"><a class="header-anchor" href="#if-else-introduire-des-conditions" aria-hidden="true">#</a> if, else : introduire des conditions</h2><div class="custom-container tip"><p class="custom-container-title">bon \xE0 savoir</p><p>En anglais, <em>if</em> signifie &quot;si&quot;, et <em>else</em> signifie &quot;sinon&quot;</p></div><p>Dans notre programme, nous pouvons d\xE9cider de r\xE9aliser une action ou une autre selon le r\xE9sultat de certains tests.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>temperature <span class="token operator">=</span> <span class="token number">19</span>
<span class="token keyword">if</span> temperature <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Il ne fait pas si froid que \xE7a !&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;En effet, la temp\xE9rature est au-dessus de 0 : &quot;</span><span class="token punctuation">,</span> temperature<span class="token punctuation">,</span> <span class="token string">&quot; degr\xE9s Celsius.&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;L&#39;eau est gel\xE9e !&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La lecture de ce programme nous permet de comprendre qu&#39;il regarde si une temp\xE9rature donn\xE9e est sup\xE9rieure \xE0 0. Ensuite, en fonction du r\xE9sultat du test, il affichera une remarque ou l&#39;autre. Remarquez le d\xE9calage des lignes <code>3</code>, <code>4</code> et <code>6</code> par rapport aux autres : cela s&#39;appelle une <strong>indentation</strong>. En Python, pour indiquer qu&#39;un ensemble d&#39;instructions appartiennent au m\xEAme bloc, on utilise ces rep\xE8res.</p><p>Nous avons donc deux blocs d&#39;instructions :</p><ul><li>le premier est constitu\xE9 des lignes 3 et 4, et sera ex\xE9cut\xE9 si la temp\xE9rature est sup\xE9rieure \xE0 0</li><li>le second est constitu\xE9 de la ligne 6, et sera ex\xE9cut\xE9 si la temp\xE9rature n&#39;est pas inf\xE9rieure \xE0 0 (<em>else</em>)</li></ul><div class="custom-container tip" style="border-color:#4675d0;"><p class="custom-container-title">Consigne</p><ol><li>Essayer de supprimer l&#39;indentation de la ligne <code>4</code> : que se passe-t-il ?</li><li>Ajouter d&#39;autres lignes affichant une phrase dans l&#39;un ou l&#39;autre des blocs.</li><li>Modifier le programme pour qu&#39;il demande \xE0 l&#39;utilisateur une valeur de temp\xE9rature. Vous pouvez vous aider de l&#39;activit\xE9 pr\xE9c\xE9dente !</li></ol></div><h2 id="elif-des-possibilites-supplementaires" tabindex="-1"><a class="header-anchor" href="#elif-des-possibilites-supplementaires" aria-hidden="true">#</a> elif : des possibilit\xE9s suppl\xE9mentaires</h2><p>R\xE9sumons notre <a href="#if-else-introduire-des-conditions">programme pr\xE9c\xE9dent</a> :</p><ul><li>Si la temp\xE9rature est sup\xE9rieure \xE0 0, ex\xE9cuter les lignes 3 et 4</li><li>Sinon, ex\xE9cuter la ligne 6</li></ul><p>Ce <code>else</code> ne permet pas beaucoup de nuances : il ex\xE9cutera simplement son code dans le cas o\xF9 la condition pr\xE9c\xE9dente n&#39;est pas v\xE9rifi\xE9e. Il existe un autre mot-cl\xE9 pour affiner les conditions : <strong>sinon, si</strong> que l&#39;on traduirait en anglais par <strong>else, if</strong>, et qui est symbolis\xE9 en python par la contraction des deux mots, ce qui donne <code>elif</code> :</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>temperature <span class="token operator">=</span> <span class="token number">19</span>
<span class="token keyword">if</span> temperature <span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Il ne fait pas si froid que \xE7a !&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;En effet, la temp\xE9rature est au-dessus de 15 : &quot;</span><span class="token punctuation">,</span> temperature<span class="token punctuation">,</span> <span class="token string">&quot; degr\xE9s Celsius.&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> temperature <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Nous sommes entre 0 et 15 degr\xE9s, on commence \xE0 avoir froid !&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;L&#39;eau est gel\xE9e !&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La lecture du code nous donne donc :</p><ul><li>Si la temp\xE9rature est sup\xE9rieure \xE0 15, ex\xE9cuter les lignes 3 et 4</li><li>Sinon, si la temp\xE9rature est sup\xE9rieure \xE0 0 (et donc inf\xE9rieure \xE0 15), ex\xE9cuter la ligne 6</li><li>Sinon, ex\xE9cuter la ligne 8</li></ul>`,18),d={class:"custom-container tip",style:{"border-color":"#4675d0"}},m=e("p",{class:"custom-container-title"},"Consigne",-1),k=s("\xC0 l'aide de la "),v=s("fiche m\xE9mo"),g=s(" et des exemples vus aujourd'hui, r\xE9aliser un mini-quizz comportant cinq questions."),h=e("p",null,"Chaque question doit se d\xE9rouler ainsi :",-1),f=e("ul",null,[e("li",null,"la question est pos\xE9e"),e("li",null,"le joueur propose une r\xE9ponse"),e("li",null,'le programme r\xE9pond "Gagn\xE9" ou "Perdu"')],-1),q=e("p",null,"Vous pouvez simplifier les tests en proposant des questions \xE0 choix multiples !",-1);function b(_,y){const n=t("RouterLink");return i(),o("div",null,[c,e("div",d,[m,e("p",null,[k,r(n,{to:"/nsi-1ere/python1.html"},{default:u(()=>[v]),_:1}),g]),h,f,q])])}const w=a(p,[["render",b],["__file","python-acti2.html.vue"]]);export{w as default};
